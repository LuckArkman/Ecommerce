@model List<ECommerce.Models.DTOs.Product.CategoryDto>
@{
    ViewData["Title"] = "Gerenciar Categorias";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid">
    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">@ViewBag.ErrorMessage</div>
    }
    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
    {
        <div class="alert alert-success" role="alert">@TempData["SuccessMessage"]</div>
    }

    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Lista de Categorias</h3>
            <div class="card-tools">
                <a asp-controller="Admin" asp-action="CategoryAdd" class="btn btn-primary btn-sm">Adicionar Nova Categoria</a>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model == null || !Model.Any())
            {
                <p class="text-center p-3">Nenhuma categoria encontrada.</p>
            }
            else
            {
                <table class="table table-striped table-valign-middle">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nome</th>
                            <th>Descrição</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Model)
                        {
                            <tr>
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>@category.Description</td>
                                <td>
                                    <a asp-controller="Admin" asp-action="CategoryEdit" asp-route-id="@category.Id" class="btn btn-info btn-sm">Editar</a>
                                    <button class="btn btn-danger btn-sm delete-category-btn" data-category-id="@category.Id">Excluir</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(function () {
            $('.delete-category-btn').on('click', async function () {
                const categoryId = $(this).data('category-id');
                if (!confirm('Tem certeza que deseja excluir esta categoria?')) {
                    return;
                }

                const antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

                try {
                    const response = await fetch(`/api/Category/${categoryId}`, {
                        method: 'DELETE',
                        headers: { 'RequestVerificationToken': antiForgeryToken }
                    });

                    if (response.ok) {
                        alert('Categoria excluída com sucesso!');
                        location.reload();
                    } else if (response.status === 401 || response.status === 403) {
                        alert('Você não tem permissão para excluir categorias ou sua sessão expirou.');
                        window.location.href = '/Account/Login';
                    } else {
                        const errorText = await response.text();
                        alert('Erro ao excluir categoria: ' + errorText);
                    }
                } catch (error) {
                    console.error('Erro de rede ao excluir categoria:', error);
                    alert('Erro de rede ao excluir categoria.');
                }
            });
        });
    </script>
}