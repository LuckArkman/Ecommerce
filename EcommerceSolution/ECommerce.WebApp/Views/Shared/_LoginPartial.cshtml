@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav d-flex flex-row align-items-center me-3">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Olá @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Sair</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <button type="button" class="btn btn-outline-primary me-2" data-bs-toggle="modal" data-bs-target="#registerModal">Registrar</button> @* Botão que abre o modal *@
        </li>
        <li class="nav-item">
        <a class="btn btn-primary" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a> @* Botão de Login que redireciona *@
        </li>
    }
</ul>